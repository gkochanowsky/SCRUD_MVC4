//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("People_Data_2008R2Model", "FK_Person_Gender", "Gender", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SCRUD_MVC4.Models.Gender), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SCRUD_MVC4.Models.Person), true)]

#endregion

namespace SCRUD_MVC4.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PeopleEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PeopleEntities object using the connection string found in the 'PeopleEntities' section of the application configuration file.
        /// </summary>
        public PeopleEntities() : base("name=PeopleEntities", "PeopleEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PeopleEntities object.
        /// </summary>
        public PeopleEntities(string connectionString) : base(connectionString, "PeopleEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PeopleEntities object.
        /// </summary>
        public PeopleEntities(EntityConnection connection) : base(connection, "PeopleEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gender> Genders
        {
            get
            {
                if ((_Genders == null))
                {
                    _Genders = base.CreateObjectSet<Gender>("Genders");
                }
                return _Genders;
            }
        }
        private ObjectSet<Gender> _Genders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenders(Gender gender)
        {
            base.AddObject("Genders", gender);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="People_Data_2008R2Model", Name="Gender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gender : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gender object.
        /// </summary>
        /// <param name="genderID">Initial value of the GenderID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Gender CreateGender(global::System.Int32 genderID, global::System.String code)
        {
            Gender gender = new Gender();
            gender.GenderID = genderID;
            gender.Code = code;
            return gender;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderID
        {
            get
            {
                return _GenderID;
            }
            set
            {
                if (_GenderID != value)
                {
                    OnGenderIDChanging(value);
                    ReportPropertyChanging("GenderID");
                    _GenderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GenderID");
                    OnGenderIDChanged();
                }
            }
        }
        private global::System.Int32 _GenderID;
        partial void OnGenderIDChanging(global::System.Int32 value);
        partial void OnGenderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GenderDesc
        {
            get
            {
                return _GenderDesc;
            }
            set
            {
                OnGenderDescChanging(value);
                ReportPropertyChanging("GenderDesc");
                _GenderDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GenderDesc");
                OnGenderDescChanged();
            }
        }
        private global::System.String _GenderDesc;
        partial void OnGenderDescChanging(global::System.String value);
        partial void OnGenderDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("People_Data_2008R2Model", "FK_Person_Gender", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("People_Data_2008R2Model.FK_Person_Gender", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("People_Data_2008R2Model.FK_Person_Gender", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="People_Data_2008R2Model", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="doB">Initial value of the DoB property.</param>
        /// <param name="genderID">Initial value of the GenderID property.</param>
        public static Person CreatePerson(global::System.Int32 personId, global::System.String firstName, global::System.String lastName, global::System.DateTime doB, global::System.Int32 genderID)
        {
            Person person = new Person();
            person.PersonId = personId;
            person.FirstName = firstName;
            person.LastName = lastName;
            person.DoB = doB;
            person.GenderID = genderID;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DoB
        {
            get
            {
                return _DoB;
            }
            set
            {
                OnDoBChanging(value);
                ReportPropertyChanging("DoB");
                _DoB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoB");
                OnDoBChanged();
            }
        }
        private global::System.DateTime _DoB;
        partial void OnDoBChanging(global::System.DateTime value);
        partial void OnDoBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderID
        {
            get
            {
                return _GenderID;
            }
            set
            {
                OnGenderIDChanging(value);
                ReportPropertyChanging("GenderID");
                _GenderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenderID");
                OnGenderIDChanged();
            }
        }
        private global::System.Int32 _GenderID;
        partial void OnGenderIDChanging(global::System.Int32 value);
        partial void OnGenderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("People_Data_2008R2Model", "FK_Person_Gender", "Gender")]
        public Gender Gender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("People_Data_2008R2Model.FK_Person_Gender", "Gender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("People_Data_2008R2Model.FK_Person_Gender", "Gender").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gender> GenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("People_Data_2008R2Model.FK_Person_Gender", "Gender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gender>("People_Data_2008R2Model.FK_Person_Gender", "Gender", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
